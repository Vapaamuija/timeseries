# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to ignore the following files:
.idea/

# VS Code
.vscode/

# Weather Tool Specific
# =====================

# Cache directories
data/cache/
cache/
*.cache

# Log files
logs/
*.log

# Output files (generated plots, test images)
output/
*.png
*.jpg
*.jpeg
*.gif
*.svg
*.pdf
*.eps

# Test outputs and reference images
tests/*.png
tests/*.jpg
tests/*.jpeg
tests/*.gif
tests/*.svg
tests/*.pdf
tests/*.eps
test_*.png
test_*.jpg
test_*.jpeg
test_*.gif
test_*.svg
test_*.pdf
test_*.eps

# Temporary files
*.tmp
*.temp
temp/
tmp/

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# IDE and editor files
*.swp
*.swo
*~
.vscode/
.idea/
*.sublime-project
*.sublime-workspace

# Backup files
*.bak
*.backup
*.orig

# Configuration files with sensitive data
config/secrets.yaml
config/local_settings.yaml
.env.local
.env.production

# Development and debugging files
debug_*
*.debug
*.trace

# Jupyter notebook checkpoints
.ipynb_checkpoints/

# Matplotlib backend cache
.matplotlib/

# Scientific computing cache
.scipy/

# Data files (if they're large or generated)
# Uncomment if you want to ignore large data files
# data/*.nc
# data/*.hdf5
# data/*.h5
# data/*.zarr

# Documentation build
docs/build/
docs/_build/

# Local development scripts
dev_local.py
local_*.py

# Performance profiling
*.prof
*.profile

# Memory dumps
*.dump
*.hprof

# Coverage reports
.coverage
htmlcov/
coverage.xml
*.cover

# Pytest
.pytest_cache/

# Tox
.tox/

# Virtual environments
venv/
env/
ENV/
.env/

# Package management
pip-log.txt
pip-delete-this-directory.txt

# Distribution
dist/
build/
*.egg-info/

# Compiled Python
__pycache__/
*.pyc
*.pyo
*.pyd
.Python

# C extensions
*.so

# PyInstaller
*.manifest
*.spec

# Unit test artifacts
.pytest_cache/
.coverage
htmlcov/

# Documentation
docs/_build/

# Jupyter
.ipynb_checkpoints/

# IPython
profile_default/
ipython_config.py

# Environment variables
.env
.env.local
.env.development
.env.test
.env.production

# IDE
.vscode/
.idea/
*.swp
*.swo

# OS
.DS_Store
Thumbs.db

# Weather Tool specific temporary files
weather_data_*.json
weather_data_*.csv
meteogram_*.png
plot_*.png
debug_*.png
test_*.png
